---
- name: Get {{group_name}} vpc info
  ec2_vpc_net_facts:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    filters:
      "tag:Name": "{{vpc_name}}"
    region: "{{region}}"
  register: vpc 

- name: get public IP
  ipify_facts:
  register: public_ip

- name: Create {{group_name}} bastion security group
  ec2_group:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    description: "{{sg_bastion_name}}" 
    name: "{{sg_bastion_name}}"
    region: "{{region}}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{public_ip.ansible_facts.ipify_public_ip}}/32"
    state: present
    vpc_id: "{{vpc.vpcs[0].id}}"
  register: bastion_sg

- name: Tag {{group_name}} bastion security group
  ec2_tag:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{region}}"
    resource: "{{bastion_sg.group_id}}"
    tags:
      Name: "{{sg_bastion_name}}"
      group: "{{group_name}}"
    state: present

- name: Create {{group_name}} elb security group
  ec2_group:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    description: "{{sg_elb_name}}" 
    name: "{{sg_elb_name}}"
    region: "{{region}}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "{{sg_elb_cidr}}"
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: "{{sg_elb_cidr}}"
    state: present
    vpc_id: "{{vpc.vpcs[0].id}}"
  register: elb_sg

- name: Tag {{group_name}} elb security group
  ec2_tag:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{region}}"
    resource: "{{elb_sg.group_id}}"
    tags:
      Name: "{{sg_elb_name}}"
      group: "{{group_name}}"
    state: present

- name: Create {{group_name}} ec2 security group
  ec2_group:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    description: "{{sg_ec2_name}}" 
    name: "{{sg_ec2_name}}"
    region: "{{region}}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        group_id: "{{bastion_sg.group_id}}"
      - proto: tcp
        from_port: 8080
        to_port: 8080
        group_id: "{{elb_sg.group_id}}"
    state: present
    vpc_id: "{{vpc.vpcs[0].id}}"
  register: ec2_sg

- name: Tag {{group_name}} ec2 security group
  ec2_tag:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{region}}"
    resource: "{{ec2_sg.group_id}}"
    tags:
      Name: "{{sg_ec2_name}}"
      group: "{{group_name}}"
    state: present

- name: Get {{group_name}} public subnet
  ec2_vpc_subnet_facts:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    filters:
      vpc-id: "{{vpc.vpcs[0].id}}"
      "tag:Name": "{{subnet_public_name}}"
    region: "{{region}}"
  register: public_subnet

- name: Create {{group_name}} bastion ec2 instance
  ec2:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    assign_public_ip: yes
    count_tag: "Name"
    exact_count: 1
    group_id: "{{bastion_sg.group_id}}"
    image: "{{ec2_bastion_image}}"
    instance_tags:
      Name: "{{ec2_bastion_name}}"
      group: "{{group_name}}"
    instance_type: "{{ec2_bastion_type}}"
    key_name: "{{ec2_bastion_key}}"
    region: "{{region}}"
    vpc_subnet_id: "{{public_subnet.subnets[0].id}}"