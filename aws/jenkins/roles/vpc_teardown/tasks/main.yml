---
- name: Get {{group_name}} vpc info
  ec2_vpc_net_facts:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    filters:
      "tag:Name": "{{vpc_name}}"
    region: "{{region}}"
  register: vpc 

- name: Teardown {{group_name}} public route tables
  ec2_vpc_route_table:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{region}}"
    state: absent
    tags:
      Name: "{{route_table_public_name}}"
    vpc_id: "{{vpc.vpcs[0].id}}"
  when: vpc.vpcs|length > 0

- name: Teardown {{group_name}} private route tables
  ec2_vpc_route_table:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{region}}"
    state: absent
    tags:
      Name: "{{route_table_private_name}}"
    vpc_id: "{{vpc.vpcs[0].id}}"
  when: vpc.vpcs|length > 0

- name: Get nat gateway info
  ec2_vpc_nat_gateway_facts:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    filters:
      vpc-id: "{{vpc.vpcs[0].id}}"
  register: nat_gateways
  when: vpc.vpcs|length > 0

- name: Teardown nat gateway
  ec2_vpc_nat_gateway:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    nat_gateway_id: "{{item.nat_gateway_id}}"
    release_eip: yes
    region: "{{region}}"
    state: absent
    wait: yes
  with_items: 
    - "{{nat_gateways.result}}"
  when: 
    - nat_gateways.result|default([])|length > 0
    - item.state == 'available' or item.state == 'pending'

- name: Teardown {{group_name}} public subnet
  ec2_vpc_subnet:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    cidr: "{{subnet_public_cidr}}"
    region: "{{region}}"
    state: absent
    vpc_id: "{{vpc.vpcs[0].id}}"
  when: vpc.vpcs|length > 0

- name: Teardown {{group_name}} private subnet
  ec2_vpc_subnet:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    cidr: "{{subnet_private_cidr}}"
    region: "{{region}}"
    state: absent
    vpc_id: "{{vpc.vpcs[0].id}}"
  when: vpc.vpcs|length > 0

- name: Teardown {{group_name}} igw
  ec2_vpc_igw:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{region}}"
    state: absent
    vpc_id: "{{vpc.vpcs[0].id}}"
  when: vpc.vpcs|length > 0

- name: Teardown {{group_name}} vpc
  ec2_vpc_net:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    cidr_block: "{{vpc_cidr}}"
    name: "{{vpc_name}}"
    region: "{{region}}"
    state: absent
  when: vpc.vpcs|length > 0
